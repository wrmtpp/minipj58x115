{"ast":null,"code":"import _slicedToArray from\"/Users/wrmtpp/Desktop/minipj58x115/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{firestore}from'../index';import Task from'./Task';import'./Task.css';var Commentcovid=function Commentcovid(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];useEffect(function(){retriveData();},[]);var retriveData=function retriveData(){firestore.collection(\"tasks\").orderBy('id','asc').onSnapshot(function(snapshot){console.log(snapshot);var myTask=snapshot.docs.map(function(d){var _d$data=d.data(),id=_d$data.id,name=_d$data.name;return{id:id,name:name};});setTasks(myTask);});};var renderTask=function renderTask(){if(tasks&&tasks.length){return tasks.map(function(task,index){return/*#__PURE__*/React.createElement(Task,{key:index,task:task,deleteTask:deleteTask,editTask:editTask});});}else{return/*#__PURE__*/React.createElement(\"li\",null,\"No task\");}};var addTask=function addTask(){var id=tasks.length===0?1:tasks[tasks.length-1].id+1;firestore.collection(\"tasks\").doc(id+'').set({id:id,name:name});};var deleteTask=function deleteTask(id){firestore.collection('tasks').doc(id+'').delete();};var editTask=function editTask(id){firestore.collection('tasks').doc(id+'').set({id:id,name:name});};return/*#__PURE__*/React.createElement(\"div\",{className:\"app-container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Todo\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{style:{margin:'5px'},onClick:addTask},\"Submit\"),/*#__PURE__*/React.createElement(\"ul\",{style:{display:'flex',listStyle:'none'}},renderTask()));};export default Commentcovid;","map":{"version":3,"sources":["/Users/wrmtpp/Desktop/minipj58x115/client/src/components/Commentcovid.js"],"names":["React","useState","useEffect","firestore","Task","Commentcovid","tasks","setTasks","name","setName","retriveData","collection","orderBy","onSnapshot","snapshot","console","log","myTask","docs","map","d","data","id","renderTask","length","task","index","deleteTask","editTask","addTask","doc","set","delete","e","target","value","margin","display","listStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {firestore} from '../index'\nimport Task from './Task'\nimport './Task.css'\n\nconst Commentcovid = () => {\n\n  const [tasks,setTasks] = useState([\n\n  ])\n  const [name, setName] = useState('')\n\n  useEffect( () => {\n    retriveData()\n  },[])\n\n  const retriveData = () => {\n    firestore.collection(\"tasks\").orderBy('id', 'asc').onSnapshot( snapshot => {\n      console.log(snapshot)\n      let myTask = snapshot.docs.map(d => {\n          const { id, name } = d.data()\n          return {id,name }\n      })\n      setTasks(myTask)\n    })\n  }\n\n\n\n\n  const renderTask =() =>{\n    if(tasks && tasks.length){\n      return tasks.map( (task,index) => (\n        <Task key = {index}\n              task = {task}\n              deleteTask = {deleteTask}\n              editTask = {editTask} />\n        )\n      )\n     \n    }else{\n      return ( <li>No task</li> )\n    }\n  }\n\n  const addTask = () =>{\n    let id = (tasks.length === 0) ? 1 : tasks[tasks.length - 1].id + 1\n       firestore.collection(\"tasks\").doc(id + '').set({ id, name })\n  }\n\n  const deleteTask = (id) =>{\n    firestore.collection('tasks').doc(id + '').delete()\n  }\n\n  const editTask = (id) => {\n    firestore.collection('tasks').doc(id + '').set({id,name})\n  }\n\n  return (\n    <div className='app-container'>\n      <h1>Todo</h1>\n      <input type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)} />\n      <button style={{margin:'5px'}} onClick={addTask} >Submit</button> \n      <ul style={{ display: 'flex', listStyle: 'none' }} >{ renderTask() }</ul>\n    </div>\n  );\n}\n\nexport default Commentcovid;"]},"metadata":{},"sourceType":"module"}