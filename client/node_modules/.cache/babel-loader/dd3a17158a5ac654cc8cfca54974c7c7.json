{"ast":null,"code":"var _jsxFileName = \"/Users/wrmtpp/Desktop/minipj58x115/client/src/components/Commentcovid.js\";\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../index';\nimport Task from './Task';\nimport './Task.css';\nimport '../App.css';\nimport Bar from './Bar';\n\nconst Commentcovid = () => {\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState('');\n  const [todo, setTodo] = useState('');\n  const [passid, setPassid] = useState('');\n  useEffect(() => {\n    retriveData();\n  }, []);\n\n  const retriveData = () => {\n    firestore.collection(\"tasks\").orderBy('id', 'asc').onSnapshot(snapshot => {\n      console.log(snapshot);\n      let myTask = snapshot.docs.map(d => {\n        const {\n          id,\n          name,\n          todo,\n          passid\n        } = d.data();\n        return {\n          id,\n          name,\n          todo,\n          passid\n        };\n      });\n      setTasks(myTask);\n    });\n  };\n\n  const renderTask = () => {\n    if (tasks && tasks.length) {\n      return tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n        key: index,\n        task: task,\n        deleteTask: deleteTask,\n        editTask: editTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"No task\");\n    }\n  };\n\n  const addTask = () => {\n    let id = tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1;\n    firestore.collection(\"tasks\").doc(id + '').set({\n      id,\n      name,\n      todo,\n      passid\n    });\n  };\n\n  const deleteTask = id => {\n    firestore.collection('tasks').doc(id + '').delete();\n  };\n\n  const editTask = id => {\n    firestore.collection('tasks').doc(id + '').set({\n      id,\n      name,\n      todo,\n      passid\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \" \\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01 \\u0E41\\u0E25\\u0E30\\u0E23\\u0E32\\u0E22\\u0E07\\u0E32\\u0E19\\u0E17\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E41\\u0E1E\\u0E17\\u0E22\\u0E4C \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), \"  ID pass : \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"name\",\n    onChange: e => setPassid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 31\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 112\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), \"  Name : \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), \"  Todo : \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"todo\",\n    onChange: e => setTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), \"   \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-success\",\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }\n  }, \"Success\"), \"  \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 105\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      display: 'flex',\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, renderTask()));\n};\n\nexport default Commentcovid;","map":{"version":3,"sources":["/Users/wrmtpp/Desktop/minipj58x115/client/src/components/Commentcovid.js"],"names":["React","useState","useEffect","firestore","Task","Bar","Commentcovid","tasks","setTasks","name","setName","todo","setTodo","passid","setPassid","retriveData","collection","orderBy","onSnapshot","snapshot","console","log","myTask","docs","map","d","id","data","renderTask","length","task","index","deleteTask","editTask","addTask","doc","set","delete","e","target","value","display","listStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { firestore } from '../index'\nimport Task from './Task'\nimport './Task.css'\nimport '../App.css'\nimport Bar from './Bar';\n\n\nconst Commentcovid = () => {\n\n\n    const [tasks, setTasks] = useState([\n\n    ])\n    const [name, setName] = useState('')\n    const [todo, setTodo] = useState('')\n    const [passid, setPassid] = useState('')\n\n\n    useEffect(() => {\n        retriveData()\n    }, [])\n\n    const retriveData = () => {\n        firestore.collection(\"tasks\").orderBy('id', 'asc').onSnapshot(snapshot => {\n            console.log(snapshot)\n            let myTask = snapshot.docs.map(d => {\n                const { id, name, todo, passid } = d.data()\n                return { id, name, todo, passid }\n            })\n            setTasks(myTask)\n        })\n    }\n\n\n    const renderTask = () => {\n        if (tasks && tasks.length) {\n            return tasks.map((task, index) => (\n                <Task key={index}\n                    task={task}\n                    deleteTask={deleteTask}\n                    editTask={editTask} />\n            )\n            )\n\n        } else {\n            return (<li>No task</li>)\n        }\n    }\n\n    const addTask = () => {\n        let id = (tasks.length === 0) ? 1 : tasks[tasks.length - 1].id + 1\n        firestore.collection(\"tasks\").doc(id + '').set({ id, name, todo, passid })\n    }\n\n    const deleteTask = (id) => {\n        firestore.collection('tasks').doc(id + '').delete()\n    }\n\n    const editTask = (id) => {\n        firestore.collection('tasks').doc(id + '').set({ id, name, todo, passid })\n    }\n    return (\n\n\n\n        <div className='app-container'>\n            <Bar />\n\n            <h1> บันทึก และรายงานทางการแพทย์ </h1>\n\n            <br />  ID pass : <input type=\"number\" name=\"name\" onChange={(e) => setPassid(e.target.value)} />  <br />\n            <br />  Name : <input type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)} />  <br />\n            <br />  Todo : <input type=\"name\" name=\"todo\" onChange={(e) => setTodo(e.target.value)} />  <br />\n\n            <br />   <button type=\"button\" class=\"btn btn-success\" onClick={addTask} >Success</button>  <br />\n            <br />  <ul style={{ display: 'flex', listStyle: 'none' }} >{renderTask()}</ul>\n\n        </div>\n    );\n}\n\nexport default Commentcovid;"]},"metadata":{},"sourceType":"module"}